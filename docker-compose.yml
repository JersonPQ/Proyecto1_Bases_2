version: '3'

services:
  app:
    build: .
    restart: always
    environment:
      POSTGRES_DB_USER: postgres
      POSTGRES_DB_PASSWORD: postgres
      POSTGRES_DB_NAME: encuesta
      POSTGRES_DB_HOST: postgredb
      POSTGRES_DB_PORT: 5432

      MONGO_DB_USER: root
      MONGO_DB_PASSWORD: example
      MONGO_DB_HOST: mongo
      MONGO_DB_PORT: 27017

      # REDIS_HOST: redis
      # REDIS_PORT: 6379
      # REDIS_PASSWORD: redis
    ports:
      - 5000:5000
    
    networks:
      - web

    depends_on:
      - postgredb
      - mongo
      # - redis

    volumes:
      - .:/opt/app

    command: poetry run python3 -m flask --app app.py --debug run --host=0.0.0.0

  postgredb:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    networks:
      - web

    environment:
      POSTGRES_PASSWORD: postgres
    
    volumes:
      - ./database/postgre/:/docker-entrypoint-initdb.d/
  
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017

    networks:
      - web
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081

    networks:
      - web

    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  # redis:
  #   image: redis
  #   restart: always
  #   ports:
  #     - "6379:6379"

  #   networks:
  #     - web

networks:
  web:
    driver: bridge