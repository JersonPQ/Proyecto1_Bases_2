version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_DB_USER: postgres
      POSTGRES_DB_PASSWORD: postgres
      POSTGRES_DB_NAME: encuesta
      POSTGRES_DB_HOST: postgredb
      POSTGRES_DB_PORT: 5432
      MONGO_DB_USER: root
      MONGO_DB_PASSWORD: example
      MONGO_DB_HOST: mongo
      MONGO_DB_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKER: kafka:29092
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
    ports:
      - 5000:5000
    networks:
      - web
    depends_on:
      - postgredb
      - mongo
      - redis
      - kafka
      - spark-master
      - spark-worker-a
      - spark-worker-b
      - superset
    volumes:
      - .:/opt/app
    command: poetry run python3 -m flask --app app.py --debug run --host=0.0.0.0

  postgredb:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    networks:
      - web
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./database/postgre/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data  # Persist data

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
      - web
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
      - web
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - web

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - web

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:29092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - '9092:9092'
    networks:
      - web

  spark-master:
    image: bitnami/spark:latest
    restart: always
    environment:
      - SPARK_MODE=master
    ports:
      - 8080:8080
      - 7077:7077
    networks:
      - web

  spark-worker-a:
    image: bitnami/spark:latest
    restart: always
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - web
    depends_on:
      - spark-master

  spark-worker-b:
    image: bitnami/spark:latest
    restart: always
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - web
    depends_on:
      - spark-master

  superset:
    build:
      context: .
      dockerfile: Dockerfile.superset
    restart: always
    ports:
      - 8088:8088
    environment:
      SUPERSET_LOAD_EXAMPLES: 'no'
      SUPERSET_SECRET_KEY: 'thisISaSECRET_1234'
      SQLALCHEMY_DATABASE_URI: 'postgresql://postgres:postgres@postgredb:5432/encuesta'
    networks:
      - web
    depends_on:
      - postgredb
    volumes:
      - superset_home:/app/superset_home  # Persist data
      - superset_config:/app/superset_config  # Persist config
    entrypoint: ["/bin/bash", "-c", "/docker-init.sh && /app/import_dashboards.sh && /app/docker-init.sh"]

networks:
  web:
    driver: bridge

volumes:
  postgres_data:
  superset_home:
  superset_config:
